<!DOCTYPE html>
<html lang="ru">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-+0n0xVW2eSR5OomGNYDnhzAbDsOXxcvSN1TPprVMTNDbiYZCxYbOOl7+AMvyTG2x"
      crossorigin="anonymous"
    />
    <link rel="stylesheet" href="/static/css/applicants/list.css" />
    <link
      rel="shortcut icon"
      href="/static/image/favicons.ico"
      type="image/x-icon"
    />

    <style>
      [v-cloak] {
        display: none;
      }
    </style>
    <title>Информация о приёме</title>
  </head>
  <body id="start">
    <%-include('../header.ejs') %>
    <div class="container">
      <div id="app" v-cloak>
        <input
          type="text"
          class="form-control m-2"
          placeholder="Фильтр по направлению"
          v-model="napravlenieForm"
          value="napravlenieForm"
        />
        <button class="btn btn-success m-2" @click="clickHandler">
          Фильтровать
        </button>
        <button class="btn btn-danger m-2" @click="resetFilters">
          Сбросить фильтры
        </button>
        <table class="table table-striped">
          <thead>
            <tr>
              <th scope="col">#</th>
              <th scope="col">Направление/Специальность</th>
            </tr>
          </thead>
          <tbody>
            <tr v-for="(el, idx) of list">
              <th scope="row">{{ idx + 1 }}</th>
              <td>
                <a :href="id + '/' + el">{{ el }}</a>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
    <a href="#start" class="button btn btn-dark btn-lg">&uArr;</a>
    <span id="id" style="visibility: hidden"><%= id %></span>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-gtEjrD/SeCtmISkJkNUaaKMoLD0//ElJ19smozuHV6z3Iehds+3Ulb9Bn9Plx0x4"
      crossorigin="anonymous"
    ></script>
    <script src="https://cdn.jsdelivr.net/npm/vue@2"></script>
    <script>
      new Vue({
        el: '#app',

        data: {
          list: [],
          napravlenieForm: '',
          id: '',
        },

        async mounted() {
          const id = document.querySelector('#id').innerHTML
          this.id = id
          document.querySelector('#id').remove()
          const resp = await fetch(
            window.location.origin + '/api/applicants/get/'
          )
          const data = await resp.json()
          const s = new Set()
          for (const { TrainingLevel, Napravlenie } of data) {
            if (TrainingLevel === id) {
              s.add(Napravlenie)
            }
          }

          this.list = Array(...s).sort()
        },

        methods: {
          async clickHandler() {
            const resp = await fetch(
              window.location.origin + '/api/applicants/get/'
            )
            const data = await resp.json()
            const s = new Set()
            for (const { TrainingLevel, Napravlenie } of data) {
              if (TrainingLevel === this.id) {
                s.add(Napravlenie)
              }
            }

            if (this.napravlenieForm === 'Zavulon') {
              return console.log(
                'Привет от разработчика,\ngithub: https://github.com/Zavulon39'
              )
            }

            this.list = Array(...s).sort()

            if (this.napravlenieForm) {
              this.list = this.list.filter(el => {
                el = el.toLowerCase()
                this.napravlenieForm = this.napravlenieForm.toLowerCase()
                return el.indexOf(this.napravlenieForm) + 1
              })
            }
          },

          async resetFilters() {
            const resp = await fetch(
              window.location.origin + '/api/applicants/get/'
            )
            const data = await resp.json()
            const s = new Set()
            for (const { TrainingLevel, Napravlenie } of data) {
              if (TrainingLevel === this.id) {
                s.add(Napravlenie)
              }
            }

            this.list = Array(...s).sort()
          },
        },
      })

      let lastScrollTop = 0
      const btn = document.querySelector('.button')
      document.addEventListener('scroll', event => {
        event.preventDefault()
        let st = window.pageYOffset || document.documentElement.scrollTop
        if (st > lastScrollTop) {
          btn.classList.remove('down')
          btn.classList.add('up')
        } else {
          btn.classList.remove('up')
          btn.classList.add('down')
        }
        lastScrollTop = st <= 0 ? 0 : st
      })
    </script>
  </body>
</html>
