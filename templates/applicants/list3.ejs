<!DOCTYPE html>
<html lang="ru">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-+0n0xVW2eSR5OomGNYDnhzAbDsOXxcvSN1TPprVMTNDbiYZCxYbOOl7+AMvyTG2x"
      crossorigin="anonymous"
    />
    <link rel="stylesheet" href="/static/css/applicants/list.css" />
    <style>
      [v-cloak] {
        display: none;
      }
    </style>
    <title>Статистика</title>
  </head>
  <body id="start">
    <%-include('../header.ejs') %>
    <div class="container">
      <div id="app" v-cloak>
        <div class="m-2 my-4">
          <h4>Уровень образования - {{ id1 }}</h4>
          <h4>Направление - {{ id2 }}</h4>
        </div>
        <input
          type="text"
          class="form-control m-2"
          placeholder="Фильтр по источнику финансирования"
          v-model="cashForm"
          value="cashForm"
        />
        <input
          type="text"
          class="form-control m-2"
          placeholder="Фильтр по форме обучения"
          v-model="eduForm"
          value="eduForm"
        />
        <button class="btn btn-success m-2 mb-4" @click="clickHandler">
          Фильтровать
        </button>
        <button class="btn btn-danger m-2 mb-4" @click="resetFilters">
          Сбросить фильтры
        </button>
        <table class="table table-striped">
          <thead>
            <tr>
              <th scope="col">#</th>
              <th scope="col">Фио</th>
              <th scope="col">Дата подачи</th>
              <th scope="col">Кол. наград</th>
              <th scope="col">Форма обучения</th>
              <th scope="col">Источник финансированию</th>
            </tr>
          </thead>
          <tbody>
            <tr v-for="(el, idx) of list">
              <th scope="row">{{ idx + 1 }}</th>
              <td>
                <a :href="'/' + 'applicants/' + el.idx">{{ el.FIO }}</a>
              </td>
              <td>{{new Date(el.DPZ).toLocaleDateString()}}</td>
              <td>{{ el.IDs.length }}</td>
              <td>{{ el.Form }}</td>
              <td>{{ el.Osnovanie }}</td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
    <a href="#start" class="button btn btn-dark btn-lg">&uArr;</a>
    <span id="id1" style="visibility: hidden"><%= id1 %></span>
    <span id="id2" style="visibility: hidden"><%= id2 %></span>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-gtEjrD/SeCtmISkJkNUaaKMoLD0//ElJ19smozuHV6z3Iehds+3Ulb9Bn9Plx0x4"
      crossorigin="anonymous"
    ></script>
    <script src="https://cdn.jsdelivr.net/npm/vue@2"></script>
    <script>
      new Vue({
        el: '#app',

        data: {
          list: [],
          cashForm: '',
          eduForm: '',
          id1: '',
          id2: '',
        },

        async mounted() {
          const resp = await fetch(
            window.location.origin + '/api/applicants/get/'
          )
          const id1 = document.querySelector('#id1').innerHTML
          const id2 = document.querySelector('#id2').innerHTML
          this.id1 = id1
          this.id2 = id2
          document.querySelector('#id1').remove()
          document.querySelector('#id2').remove()

          const data = await resp.json()

          this.list = data.filter(
            el => el.TrainingLevel === id1 && el.Napravlenie === id2
          )
        },

        methods: {
          async clickHandler() {
            const resp = await fetch(
              window.location.origin + '/api/applicants/get/'
            )
            const data = await resp.json()
            this.list = data.filter(
              el => el.TrainingLevel === this.id1 && el.Napravlenie === this.id2
            )

            if (this.cashForm) {
              this.list = this.list.filter(el => el.Osnovanie === this.cashForm)
            }
            if (this.eduForm) {
              this.list = this.list.filter(el => el.Form === this.eduForm)
            }
          },

          async resetFilters() {
            const resp = await fetch(
              window.location.origin + '/api/applicants/get/'
            )
            const data = await resp.json()

            this.list = data.filter(
              el => el.TrainingLevel === this.id1 && el.Napravlenie === this.id2
            )

            this.cashForm = this.eduForm = ''
            this.prizeForm = null
          },
        },
      })

      let lastScrollTop = 0
      const btn = document.querySelector('.button')
      document.addEventListener('scroll', () => {
        let st = window.pageYOffset || document.documentElement.scrollTop
        if (st > lastScrollTop) {
          btn.classList.remove('down')
          btn.classList.add('up')
        } else {
          btn.classList.remove('up')
          btn.classList.add('down')
        }
        lastScrollTop = st <= 0 ? 0 : st
      })
    </script>
  </body>
</html>
